multipass launch --name k3s-basic-node --cpus 2 --memory 1.5G --disk 10G

# 파일 전송
multipass transfer deployment.yaml k3s-basic-node:/home/ubuntu/deployment.yaml
multipass transfer service.yaml k3s-basic-node:/home/ubuntu/service.yaml
multipass transfer components.yaml k3s-basic-node:/home/ubuntu/components.yaml
multipass transfer hpa.yaml k3s-basic-node:/home/ubuntu/hpa.yaml
multipass transfer hpa_monitor.sh k3s-basic-node:/home/ubuntu/hpa_monitor.sh

# 접속
multipass shell k3s-basic-node

# 환경 셋팅
sudo apt update
sudo apt install -y docker.io
curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644
sudo usermod -aG docker $USER

# 나갔다가, 재접속
exit
multipass shell k3s-basic-node


# 파드 생성
k3s kubectl delete deployment my-spring-app
k3s kubectl apply -f deployment.yaml
k3s kubectl apply -f components.yaml
k3s kubectl apply -f hpa.yaml
k3s kubectl get pods

# 서비스 등록
k3s kubectl apply -f service.yaml
k3s kubectl get services

# 로그 기록
./hpa_monitor.sh &

# 가상머신 삭제 및 재 생성
multipass delete k3s-basic-node
multipass purge
multipass launch --name k3s-basic-node --cpus 2 --memory 1.5G --disk 10G


# 파드 모니터링
kubectl get hpa -w
kubectl get pods -w

# 로그 보기
k3s kubectl logs <파드 이름>


# 메트릭 파드 확인
kubectl get pods -n kube-system | grep metrics-server
# 로그
kubectl logs -n kube-system <metrics-server-pod-name>
# 실시간 로그
kubectl logs -n kube-system -f <metrics-server-pod-name>